x-airflow-common:
  &airflow-common
  image: apache/airflow:2.8.1
  environment:
    &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: "postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres/${POSTGRES_DB}"
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__API__AUTH_BACKENDS: 'airflow.api.auth.backend.basic_auth'
    _PIP_ADDITIONAL_REQUIREMENTS: "pymongo"
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - ./scripts:/opt/airflow/scripts
  user: "${AIRFLOW_UID}:0"
  depends_on:
    - postgres
    - datalake

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data

  datalake:
    image: postgres:13
    container_name: datalake
    environment:
      POSTGRES_USER: datalake_user
      POSTGRES_PASSWORD: datalake_pass
      POSTGRES_DB: datalake
    ports:
      - "5433:5432"
    volumes:
      - datalake-db-volume:/var/lib/postgresql/data

  airflow-webserver:
    <<: *airflow-common
    command: webserver
    ports:
      - "8081:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler

  airflow-init:
    <<: *airflow-common
    command: bash -c "airflow db migrate && airflow users create \
      --username admin \
      --password admin \
      --firstname Admin \
      --lastname User \
      --role Admin \
      --email admin@example.com"

  spark:
    image: bitnami/spark:3.5
    container_name: spark
    user: root
    networks:
      - default
    environment:
      - SPARK_MODE=standalone
      - HOME=/tmp
    volumes:
      - ./scripts:/opt/spark-apps
    command: sleep infinity

  streamlit:
    image: python:3.10-slim
    container_name: streamlit
    ports:
      - "8501:8501"
    volumes:
      - ./streamlit:/app
    working_dir: /app
    command: bash -c "pip install streamlit psycopg2-binary pandas plotly && streamlit run app.py"


volumes:
  postgres-db-volume:
  datalake-db-volume:
